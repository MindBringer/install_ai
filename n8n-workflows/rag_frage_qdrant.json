{
  "name": "Frage an RAG (Qdrant + Ollama)",
  "nodes": [
    {
      "parameters": {
        "path": "ask",
        "method": "POST",
        "responseMode": "lastNode",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        200,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "const frage = $json[\"question\"] || \"\";\nreturn [{ json: { frage } }];"
      },
      "name": "Frage extrahieren",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        400,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://ollama:11434/api/embeddings",
        "method": "POST",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "{ \"model\": \"mistral\", \"prompt\": \"{{ $json.frage }}\" }"
      },
      "name": "Embedding holen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        600,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "return [{ json: { vector: $json.embedding, top: 5, with_payload: true } }];"
      },
      "name": "Vektor vorbereiten",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        800,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://qdrant:6333/collections/docs/points/search",
        "method": "POST",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "{{ $json }}"
      },
      "name": "Qdrant Suche",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1000,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "const context = items[0].json.result.map(x => x.payload.text).join(\"\\n\\n\");\nreturn [{ json: { prompt: `Beantworte die Frage basierend auf diesem Kontext:\\n\\n${context}\\n\\nFrage: ${$node[\\\"Frage extrahieren\\\"].json[\\\"frage\\\"]}` } }];"
      },
      "name": "Prompt bauen",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1200,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://ollama:11434/api/generate",
        "method": "POST",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "{ \"model\": \"mistral\", \"prompt\": \"{{ $json.prompt }}\", \"stream\": false }"
      },
      "name": "Antwort von Ollama",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1400,
        300
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Frage extrahieren",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Frage extrahieren": {
      "main": [
        [
          {
            "node": "Embedding holen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embedding holen": {
      "main": [
        [
          {
            "node": "Vektor vorbereiten",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vektor vorbereiten": {
      "main": [
        [
          {
            "node": "Qdrant Suche",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Suche": {
      "main": [
        [
          {
            "node": "Prompt bauen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt bauen": {
      "main": [
        [
          {
            "node": "Antwort von Ollama",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false
}